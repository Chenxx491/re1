/*
题目：实现函数dounle Power(double base,int exponent)，求base的exponent次方。不得使用库函数，同时不需要考虑大数问题

 解题思路：1. 首先想到的肯定是for循环，从1到exponent乘即可
          2. exponent=0时，结果=1
          3. exponent<0时，结果为对exponent求绝对值用for循环求出乘方的倒数
          4. exponent>0时，结果为用for循环求出乘方
          5. base不能为0，所以当base=0时，报错。
          6. 循环的相乘的次数是可以缩减，比如16次方，其实只需要在8次方基础上平方，8次方又只需在4次方基础上平方
          7. 可用递归实现
 */

import java.util.Scanner;
public class ANumberToAnIntegerPower {
    public static double Power(double base,int exponent){
        double result=0;
        if (base==0){
            System.out.println("底数不能为0");
        } else {
            int newExponent = Math.abs(exponent);
            if (exponent==0){
                result=1;
            }else if (exponent==1){
                result=base;
            }else if (exponent<0 && (newExponent%2==0)){
                result = 1 / (calculate(base,newExponent/2) * calculate(base,newExponent/2));  // exponent为负数且是偶数
            } else if (exponent<0 && (newExponent%2!=0)){
                result = 1 / (calculate(base,newExponent/2) * calculate(base,newExponent/2)*base);   // exponent为负数且是奇数
            }else if (exponent>0 && (exponent%2==0)){
                result = calculate(base,exponent/2) * calculate(base,exponent/2);          // exponent为正数且是偶数
            }else if (exponent>0 && (exponent%2!=0)){
                result = calculate(base,exponent/2) * calculate(base,exponent/2)*base;   // exponent为正数且是奇数
            }
        }
        return result;
    }

    public static double calculate(double base,int exponent){
        double result;
        if (exponent==1){
            result=base;
        }else {
            result = calculate(base,exponent>>1) * calculate(base,exponent>>1);
        }
        return result;
    }

    public static void main(String[] args) {
        System.out.print("请输入底数和指数：");
        Scanner scanner = new Scanner(System.in);
        double base = scanner.nextDouble();
        int exponent = scanner.nextInt();
        System.out.print("结果为：" + Power(base,exponent));
    }
}
